{
  "name": "migration",
  "version": "0.2.0",
  "description": "Abstract migration framework for node",
  "keywords": [
    "migrate",
    "migrations",
    "migration"
  ],
  "author": {
    "name": "Jarvis Ao Ieong",
    "email": "kinua1230@gmail.com",
    "url": "https://github.com/kinua"
  },
  "bin": {
    "migrate": "./bin/migrate"
  },
  "main": "lib/migrate",
  "homepage": "https://github.com/kinua/migration",
  "bugs": {
    "url": "https://github.com/kinua/migration/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kinua/migration.git"
  },
  "engines": {
    "node": ">=0.8.0",
    "npm": ">=1.2.10"
  },
  "dependencies": {
    "coffee-script": "~1.6.3",
    "moment": "~2.0.0"
  },
  "readme": "# migration\r\n\r\n  Abstract migration framework for node, support javascript and coffee-script.\r\n\r\n## Origin\r\n\r\nThis project is based on TJ's [node-migrate](https://github.com/visionmedia/node-migrate).\r\n\r\nThe main difference:\r\n\r\n- coffee script support\r\n- env flag\r\n- migrate.opts default flag setting\r\n- timestamp instead of sequnece number in file name when create migrate file\r\n\r\n## Installation\r\n\r\n    $ npm install migration\r\n\r\n## Usage\r\n\r\n    Usage: migrate [options] [command]\r\n\r\n    Options:\r\n\r\n       -c, --chdir <path>   change the working directory\r\n       --js                 create js migration template\r\n       --coffee             create coffee-script migration template\r\n       -e, --env            set NODE_ENV, default is development\r\n\r\n    Commands:\r\n\r\n       down   [name]    migrate down till given migration\r\n       up     [name]    migrate up till given migration (the default command)\r\n       create [title]   create a new migration file with optional [title]\r\n\r\n## Creating Migrations\r\n\r\nTo create a migration, execute `migrate create` with an optional title. `node-migrate` will create a node module within `./migrations/` which contains the following two exports:\r\n\r\n    exports.up = function(next){\r\n      next();\r\n    };\r\n\r\n    exports.down = function(next){\r\n      next();\r\n    };\r\n\r\nAll you have to do is populate these, invoking `next()` when complete, and you are ready to migrate!\r\n\r\nFor example:\r\n\r\n    $ migrate create add-pets\r\n    $ migrate create add-owners\r\n\r\nThe first call creates `./migrations/20130601000000000-add-pets.js`, which we can populate:\r\n\r\n    var db = require('./db');\r\n\r\n    exports.up = function(next){\r\n      db.rpush('pets', 'tobi');\r\n      db.rpush('pets', 'loki');\r\n      db.rpush('pets', 'jane', next);\r\n    };\r\n\r\n    exports.down = function(next){\r\n      db.rpop('pets');\r\n      db.rpop('pets', next);\r\n    };\r\n\r\nThe second creates `./migrations/20130601000001000-add-owners.js`, which we can populate:\r\n\r\n    var db = require('./db');\r\n\r\n    exports.up = function(next){\r\n      db.rpush('owners', 'taylor');\r\n      db.rpush('owners', 'tj', next);\r\n    };\r\n\r\n    exports.down = function(next){\r\n      db.rpop('owners');\r\n      db.rpop('owners', next);\r\n    };\r\n\r\n## Running Migrations\r\n\r\nWhen first running the migrations, all will be executed in sequence.\r\n\r\n    $ migrate\r\n    up : migrations/20130601000000000-add-pets.js\r\n    up : migrations/20130602000000000-add-jane.js\r\n    migration : complete\r\n\r\nSubsequent attempts will simply output \"complete\", as they have already been executed in this machine. `node-migrate` knows this because it stores the current state in `./migrations/.migrate` which is typically a file that SCMs like GIT should ignore.\r\n\r\n    $ migrate\r\n    migration : complete\r\n\r\nIf we were to create another migration using `migrate create`, and then execute migrations again, we would execute only those not previously executed:\r\n\r\n    $ migrate\r\n    up : migrates/20130603000000000-coolest-owner.js\r\n\r\nYou can also run migrations incrementally by specifying a migration.\r\n\r\n    $ migrate up 20130605000000000-coolest-pet.js\r\n    up : migrations/20130604000000000-add-pets.js\r\n    up : migrations/20130605000000000-coolest-pet.js\r\n    migration : complete\r\n\r\nThis will run up-migrations upto (and including) `002-coolest-pet.js`. Similarly you can run down-migrations upto (and including) a specific migration, instead of migrating all the way down.\r\n\r\n    $ migrate down 20130601000000000-add-jane.js\r\n    down : migrations/20130602000000000-add-owners.js\r\n    down : migrations/20130601000000000-add-jane.js\r\n    migration : complete\r\n\r\n## License \r\n\r\nCopyright (c) 2013 Jarvis Ao Ieong   \r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "README.md",
  "_id": "migration@0.2.0",
  "dist": {
    "shasum": "e6eee350740479170a893acd5ad3a722526702f9"
  },
  "_from": "migration@",
  "_resolved": "https://registry.npmjs.org/migration/-/migration-0.2.0.tgz"
}
